{"version":3,"sources":["reducers/moviesReducer.js","actions/types.js","reducers/errorsReducer.js","reducers/generalReducer.js","reducers/rootReducer.js","store.js","cmps/layout/Header.jsx","cmps/layout/Nav.jsx","actions/generalActions.js","cmps/movies/AddMovie.jsx","utils/moviesService.js","actions/moviesActions.js","cmps/movies/MovieCard.jsx","cmps/movies/MoviesList.jsx","actions/errorActions.js","utils/validation.js","cmps/general/AddEditeModalContent.jsx","cmps/general/DeleteModalContent.jsx","cmps/general/Modal.jsx","cmps/pages/Home.jsx","cmps/pages/About.jsx","cmps/general/Loading.jsx","App.js","serviceWorker.js","index.js"],"names":["initialState","moviesToDisplay","pickedMovie","moviesReducer","state","arguments","length","undefined","_ref","type","payload","Object","objectSpread","concat","map","movie","id","filter","errrorReducer","modalContent","generalReducer","rootReducer","combineReducers","movies","errors","errorsReducer","general","middleware","thunk","store","createStore","compose","applyMiddleware","apply","Header","react_default","a","createElement","className","withRouter","props","Link","cn","active","location","pathname","to","setModal","content","AddMovie","_this","onClick","this","Component","connect","dispatch","getMovieDetails","movieName","axios","get","moviesService","prms","name","Promise","all","then","res","item","data","Title","Year","Runtime","Genre","Director","Poster","uuid","v4","catch","err","console","log","getInitialDetails","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","forEach","stop","_x","pickMovie","src","alt","MoviesList","moviesList","idx","movies_MovieCard","key","checkErr","errObj","validator","trim","isEmpty","whitelist","toLowerCase","isAfter","toDate","getState","find","currMovie","resolve","checkMovie","AddEditModalContent","modalTitle","isvAlid","componentDidMount","setState","checkInput","_movie","assign","errore","keys","createMovieObj","addMovie","updateMovie","isValid","setTimeout","handleChange","e","defineProperty","target","value","handleCancel","isURL","match","split","word","charAt","toUpperCase","slice","join","noValidate","onChange","placeholder","hidden","DeleteModalContent","handleDelete","removeMovie","ReactModal","setAppElement","Modal","handleClose","determineContent","AddEditeModalContent","general_DeleteModalContent","lib_default","isOpen","contentLabel","onRequestClose","shouldCloseOnOverlayClick","shouldCloseOnEsc","style","top","left","right","bottom","marginRight","transform","backgroundColor","Home","movies_AddMovie","movies_MoviesList","general_Modal","About","href","title","Loading","App","isLoading","BrowserRouter","basename","process","layout_Header","layout_Nav","general_Loading","Fragment","Route","path","component","exact","Boolean","window","hostname","ReactDOM","render","react_redux_es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0167c78b.chunk.js","sourcesContent":["import { ADD_MOVIE, PICK_MOVIE, REMOVE_MOVIE, UPDATE_MOVIE } from '../actions/types';\r\n\r\nconst initialState = {\r\n    moviesToDisplay: [],\r\n    pickedMovie: null\r\n}\r\n\r\nconst moviesReducer = (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n        case ADD_MOVIE:\r\n            return {\r\n                ...state,\r\n                moviesToDisplay: state.moviesToDisplay.concat(payload)\r\n            }\r\n        case PICK_MOVIE: {\r\n            return {\r\n                ...state,\r\n                pickedMovie: payload\r\n            }\r\n        }\r\n        case UPDATE_MOVIE: {\r\n            return {\r\n                ...state,\r\n                moviesToDisplay: state.moviesToDisplay.map(movie => {\r\n                    if (movie.id === payload.id) return payload\r\n                    return movie\r\n                })\r\n            }\r\n        }\r\n        case REMOVE_MOVIE:\r\n            return {\r\n                ...state,\r\n                moviesToDisplay: state.moviesToDisplay.filter(movie => movie.id !== payload)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default moviesReducer;","export const ADD_MOVIE = 'ADD_MOVIE';\r\nexport const PICK_MOVIE = 'PICK_MOVIE';\r\nexport const REMOVE_MOVIE = 'REMOVE_MOVIE';\r\nexport const UPDATE_MOVIE = 'UPDATE_MOVIE';\r\nexport const SET_ERR = 'SET_ERR';\r\nexport const SET_MODAL = 'SET_MODAL';","import { SET_ERR } from '../actions/types';\r\nconst initialState = {};\r\n\r\nconst errrorReducer = (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n        case SET_ERR:\r\n            return {\r\n                ...payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default errrorReducer;","import { SET_MODAL } from '../actions/types'\r\nconst initialState = {\r\n    modalContent: ''\r\n}\r\nconst generalReducer = (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n        case SET_MODAL:\r\n            return {\r\n                ...state,\r\n                modalContent: payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default generalReducer;","import { combineReducers } from 'redux';\r\nimport moviesReducer from './moviesReducer';\r\nimport errorsReducer from './errorsReducer';\r\nimport generalReducer from './generalReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    movies: moviesReducer,\r\n    errors: errorsReducer,\r\n    general: generalReducer\r\n})\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/rootReducer';\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(rootReducer, compose(applyMiddleware(...middleware)))\r\n\r\nexport default store;","import React from 'react';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className=\"header\">\r\n            <div className=\"heading-primary\">\r\n                <h1 className=\"heading-primary--main\">herolo cinema</h1>\r\n                <p className=\"heading-primary--sub\">all your favorite movies in one place</p>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport cn from 'classnames'\r\nconst Nav = (props) => {\r\n    return (\r\n        <nav className=\"nav-bar\">\r\n            <ul className=\"nav__list\">\r\n                <li> <Link className={cn(\"nav__link\", { 'active': props.location.pathname === '/' })} to=\"/\">Home</Link> </li>\r\n                <li> <Link className={cn(\"nav__link\", { 'active': props.location.pathname === '/about' })} to=\"/about\">About</Link> </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default withRouter(Nav);","import { SET_MODAL } from './types';\r\n\r\nexport const setModal = (content) => {\r\n    return {\r\n        type: SET_MODAL,\r\n        payload: content\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { setModal } from '../../actions/generalActions'\r\nclass AddMovie extends Component {\r\n    setModal = () => {\r\n        this.props.setModal('add')\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"add-section\">\r\n                <div className=\"add-container\">\r\n                    <h2 className=\"add-title\">Add a movie</h2>\r\n                    <div className=\"btn btn-add\"\r\n                        onClick={this.setModal}\r\n                    >Add</div>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\nconst mapActionsToProps = (dispatch) => {\r\n    return {\r\n        setModal: (modalContent) => { dispatch(setModal(modalContent)) }\r\n    }\r\n}\r\nexport default connect(null, mapActionsToProps)(AddMovie);","import axios from 'axios';\r\nimport uuid from 'uuid';\r\nconst getMovieDetails = (movieName) => {\r\n    let url = 'https://www.omdbapi.com/?apikey=ff880c11&t=';\r\n    return axios.get(url + movieName)\r\n}\r\nconst getInitialData = () => {\r\n    let movies = ['The+Princess+Bride', 'Toy+Story', 'Thor ', 'Trainspotting', 'Guardians+Of+The+Galaxy', 'Seven', 'The+Matrix', 'The+Lord+Of+The+Rings:+The+Two+Towers', 'Fight+Club', 'Pulp+Fiction', 'The+Dark+Knight', 'wonder+woman'];\r\n\r\n    let prms = movies.map(name => getMovieDetails(name))\r\n    return Promise.all(prms)\r\n        .then(res => res.map(item => {\r\n            let data = item.data;\r\n            let { Title, Year, Runtime, Genre, Director, Poster } = data;\r\n            return {\r\n                Title,\r\n                Year,\r\n                Runtime,\r\n                Genre,\r\n                Director,\r\n                Poster,\r\n                id: uuid.v4()\r\n            }\r\n        }))\r\n        .then(res => res)\r\n        .catch(err => console.log('error!', err))\r\n\r\n}\r\nexport default {\r\n    getMovieDetails,\r\n    getInitialData\r\n}","import moviesService from '../utils/moviesService';\r\nimport { ADD_MOVIE, PICK_MOVIE, REMOVE_MOVIE, UPDATE_MOVIE } from './types'\r\n\r\nexport const getInitialDetails = () => async (dispatch) => {\r\n    await moviesService.getInitialData()\r\n        .then(res => {\r\n            res.forEach(movie => dispatch({\r\n                type: ADD_MOVIE,\r\n                payload: movie\r\n            }))\r\n        })\r\n\r\n}\r\nexport const updateMovie = (movie) => {\r\n    return {\r\n        type: UPDATE_MOVIE,\r\n        payload: movie\r\n    }\r\n}\r\nexport const addMovie = (movie) => {\r\n    return {\r\n        type: ADD_MOVIE,\r\n        payload: movie\r\n    }\r\n}\r\nexport const pickMovie = (movie) => {\r\n    return {\r\n        type: PICK_MOVIE,\r\n        payload: movie\r\n    }\r\n}\r\nexport const removeMovie = (id) => {\r\n    return {\r\n        type: REMOVE_MOVIE,\r\n        payload: id\r\n    }\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { setModal } from '../../actions/generalActions';\r\nimport { pickMovie } from '../../actions/moviesActions'\r\n\r\nconst MovieCard = (props) => {\r\n    const { movie } = props\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card__top\">\r\n                <img src={movie.Poster} alt=\"poster\" className=\"card-poster\" />\r\n                <div\r\n                    className=\"btn btn-card btn-left\"\r\n                    onClick={() => {\r\n                        props.pickMovie(movie)\r\n                        props.setModal('edit')\r\n                    }}\r\n                >Edit</div>\r\n                <div className=\"btn btn-card btn-right\"\r\n                    onClick={() => {\r\n                        props.pickMovie(movie)\r\n                        props.setModal('delete')\r\n                    }}\r\n                >x</div>\r\n            </div>\r\n            <div className=\"card__bottom\">\r\n                <div className=\"movie-title\">{movie.Title} </div>\r\n                <div className=\"movie-sub-details\">{movie.Year}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst mapActionsToProps = (dispatch) => {\r\n    return {\r\n        setModal: (modalContent) => { dispatch(setModal(modalContent)) },\r\n        pickMovie: (movie) => { dispatch(pickMovie(movie)) }\r\n\r\n    }\r\n}\r\nexport default connect(null, mapActionsToProps)(MovieCard);","import React, { Component } from 'react'\r\nimport MovieCard from './MovieCard';\r\nimport { connect } from 'react-redux'\r\nclass MoviesList extends Component {\r\n\r\n    render() {\r\n        let moviesList = this.props.movies.moviesToDisplay.map((movie, idx) => <MovieCard key={idx} movie={movie} />)\r\n        return (\r\n            <section className=\"movies-section\">\r\n                <h2 className=\"movies-title\">Edit your movies</h2>\r\n                <div className=\"movies-container\">\r\n                    {moviesList}\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        movies: state.movies,\r\n        errors: state.errors\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(MoviesList);","import { SET_ERR } from './types';\r\nimport { checkMovie } from '../utils/validation'\r\nexport const checkErr = (movie) => (dispatch) => {\r\n    checkMovie(movie)\r\n        .then(errObj => {\r\n            dispatch({\r\n                type: SET_ERR,\r\n                payload: errObj\r\n            })\r\n        })\r\n\r\n}","import validator from 'validator'\r\nimport store from '../store';\r\nexport const checkString = (str) => {\r\n    return ({\r\n        empty: validator.isEmpty(str),\r\n        alpha: validator.isAlpha(str)\r\n    })\r\n}\r\n\r\nexport const checkMovie = (movie) => {\r\n    let errObj = {}\r\n\r\n    movie.Title = validator.trim(movie.Title)\r\n    movie.Director = validator.trim(movie.Director)\r\n    movie.Genre = validator.trim(movie.Genre)\r\n    if (validator.isEmpty(movie.Title)) errObj.Title = \"Title field is required\"\r\n    if (!validator.whitelist(movie.Title.toLowerCase(), 'abcdefghijklmnopqrstuvwxyz')) errObj.Title = \"Title should include at least one letter\"\r\n    if (validator.isEmpty(movie.Director)) errObj.Director = \"Director field is required\"\r\n    if (validator.isEmpty(movie.Genre)) errObj.Genre = \"Genre field is required\"\r\n    if (!validator.isAfter(movie.Year, validator.toDate('1900') + '')) errObj.Year = \"Year should be after 1900\"\r\n    if (!validator.toDate(movie.Year)) errObj.Year = \"Year is not valid\"\r\n    if (validator.isEmpty(movie.Runtime)) errObj.Runtime = \"Runtime field is required\"\r\n\r\n    let movies = store.getState().movies.moviesToDisplay\r\n    if (movies.find(currMovie =>\r\n        ((currMovie.Title.toLowerCase() === validator.whitelist(movie.Title.toLowerCase(), 'abcdefghijklmnopqrstuvwxyz ')) && currMovie.id !== movie.id)\r\n\r\n    )) errObj.Title = \"Title already exist\"\r\n    return Promise.resolve(errObj)\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport cn from 'classnames'\r\nimport uuid from 'uuid'\r\nimport validator from 'validator'\r\nimport { setModal } from '../../actions/generalActions';\r\nimport { pickMovie, addMovie, updateMovie } from '../../actions/moviesActions'\r\nimport { checkErr } from '../../actions/errorActions'\r\nclass AddEditModalContent extends Component {\r\n    state = {\r\n        Title: '',\r\n        Year: '',\r\n        Director: '',\r\n        Genre: '',\r\n        Runtime: '',\r\n        Poster: '',\r\n        id: '',\r\n        modalTitle: 'Add a movie',\r\n        errors: {},\r\n        isvAlid: false\r\n    }\r\n    componentDidMount = () => {\r\n        if (this.props.general.modalContent === 'edit') {\r\n            let { pickedMovie } = this.props.movies\r\n            this.setState({ ...pickedMovie, modalTitle: 'Edit your movie' })\r\n        }\r\n\r\n    }\r\n    checkInput = async () => {\r\n        let movie = Object.assign({}, this.state)\r\n        delete movie.modalTitle\r\n        delete movie.isvAlid\r\n        delete movie.errore\r\n        await this.props.checkErr(movie)\r\n        let errors = this.props.errors\r\n        this.setState({ errors })\r\n        if (Object.keys(errors).length === 0) {\r\n            let movie = this.createMovieObj()\r\n            if (this.props.general.modalContent === 'add') {\r\n                this.props.addMovie(movie)\r\n            }\r\n            else {\r\n                this.props.updateMovie(movie)\r\n            }\r\n            this.setState({ isValid: true })\r\n            setTimeout(() => {\r\n                this.props.setModal('')\r\n            }, 2000);\r\n        }\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n    handleCancel = () => {\r\n        this.props.pickMovie(null)\r\n        this.props.setModal('')\r\n    }\r\n    createMovieObj = () => {\r\n        let movie = Object.assign({}, this.state)\r\n        delete movie.errors\r\n        delete movie.modalTitle\r\n        delete movie.isvAlid\r\n        if (this.props.general.modalContent === 'add') {\r\n            movie.id = uuid.v4()\r\n        }\r\n        if (!(validator.isURL(movie.Poster) && (movie.Poster.match(/\\.(jpeg|jpg|gif|png)$/) != null))) {\r\n            movie.Poster = \"https://images.freeimages.com/images/large-previews/5eb/movie-clapboard-1184339.jpg\"\r\n        }\r\n        movie.Title = validator.whitelist(movie.Title.toLowerCase(), 'abcdefghijklmnopqrstuvwxyz ');\r\n        movie.Title = movie.Title.split(' ').map(word => {\r\n            return word.charAt(0).toUpperCase() + word.slice(1)\r\n        }).join(' ')\r\n        return movie;\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"modal-content\">\r\n                <h2 className=\"modal-title\">{this.state.modalTitle}</h2>\r\n                <form noValidate>\r\n                    <div className=\"form-item\">\r\n                        <label\r\n                            className=\"form-label\">Title:</label>\r\n                        <div className=\"input-container\">\r\n                            <input name=\"Title\"\r\n                                onChange={this.handleChange}\r\n                                placeholder=\"Title\"\r\n                                value={this.state.Title}\r\n                                className=\"form-input\"\r\n                            />\r\n                            <div className={cn(\"error-msg\", { 'hidden': !this.state.errors.Title })}>{this.state.errors.Title}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-item\">\r\n                        <label className=\"form-label\">Year:</label>\r\n                        <div className=\"input-container\">\r\n                            <input name=\"Year\"\r\n                                onChange={this.handleChange}\r\n                                placeholder=\"Year\"\r\n                                value={this.state.Year}\r\n                                className=\"form-input\"\r\n                            />\r\n                            <div className={cn(\"error-msg\", { 'hidden': !this.state.errors.Year })}>{this.state.errors.Year}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-item\">\r\n                        <label\r\n                            className=\"form-label\">Director:</label>\r\n                        <div className=\"input-container\">\r\n                            <input name=\"Director\"\r\n                                onChange={this.handleChange}\r\n                                placeholder=\"Director\"\r\n                                value={this.state.Director}\r\n                                className=\"form-input\"\r\n                            />\r\n                            <div className={cn(\"error-msg\", { 'hidden': !this.state.errors.Director })}>{this.state.errors.Director}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-item\">\r\n                        <label\r\n                            className=\"form-label\">Genre:</label>\r\n                        <div className=\"input-container\">\r\n                            <input name=\"Genre\"\r\n                                onChange={this.handleChange}\r\n                                placeholder=\"Genre\"\r\n                                value={this.state.Genre}\r\n                                className=\"form-input\"\r\n                            />\r\n                            <div className={cn(\"error-msg\", { 'hidden': !this.state.errors.Genre })}>{this.state.errors.Genre}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-item\">\r\n                        <label\r\n                            className=\"form-label\">Runtime:</label>\r\n                        <div className=\"input-container\">\r\n                            <input name=\"Runtime\"\r\n                                onChange={this.handleChange}\r\n                                placeholder=\"Runtime in minutes\"\r\n                                value={this.state.Runtime}\r\n                                className=\"form-input\"\r\n                            />\r\n                            <div className={cn(\"error-msg\", { 'hidden': !this.state.errors.Runtime })}>{this.state.errors.Runtime}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-item\">\r\n                        <label\r\n                            className=\"form-label\">Poster:</label>\r\n                        <div className=\"input-container\">\r\n                            <input name=\"Poster\"\r\n                                onChange={this.handleChange}\r\n                                placeholder=\"Optional, url\"\r\n                                value={this.state.Poster}\r\n                                className=\"form-input\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                <div className=\"modal-actions\">\r\n                    <div className=\"btn btn-cancel\"\r\n                        onClick={this.handleCancel}\r\n                    >Cancel</div>\r\n                    <div className=\"btn btn-apply\"\r\n                        onClick={this.checkInput}\r\n                    >\r\n                        Ok\r\n                    </div>\r\n                </div>\r\n                <div className={cn('success-msg', { 'hidden': !this.state.isValid })}>\r\n                    The movie was {this.props.general.modalContent === 'add' ? 'added' : 'edited'}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        general: state.general,\r\n        movies: state.movies,\r\n        errors: state.errors\r\n    }\r\n}\r\nconst mapActionsToProps = (dispatch) => {\r\n    return {\r\n        setModal: (modalContent) => { dispatch(setModal(modalContent)) },\r\n        pickMovie: (movie) => { dispatch(pickMovie(movie)) },\r\n        checkErr: (movie) => { dispatch(checkErr(movie)) },\r\n        addMovie: (movie) => { dispatch(addMovie(movie)) },\r\n        updateMovie: (movie) => { dispatch(updateMovie(movie)) }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapActionsToProps)(AddEditModalContent);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { setModal } from '../../actions/generalActions';\r\nimport { removeMovie, pickMovie } from '../../actions/moviesActions'\r\n\r\nclass DeleteModalContent extends Component {\r\n    handleDelete = () => {\r\n        this.props.removeMovie(this.props.movies.pickedMovie.id)\r\n        this.props.pickMovie()\r\n        this.props.setModal()\r\n    }\r\n    handleCancel = () => {\r\n        this.props.pickMovie()\r\n        this.props.setModal()\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"modal-content\">\r\n                <h2 className=\"modal-title\">Delete?</h2>\r\n                <div className=\"modal-actions\">\r\n                    <div className=\"btn btn-cancel\"\r\n                        onClick={this.handleCancel}\r\n                    >Cancel</div>\r\n                    <div className=\"btn btn-apply\"\r\n                        onClick={this.handleDelete}\r\n                    >\r\n                        Ok\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        movies: state.movies\r\n    }\r\n}\r\nconst mapActionsToProps = (dispatch) => {\r\n    return {\r\n        removeMovie: (id) => { dispatch(removeMovie(id)) },\r\n        pickMovie: () => { dispatch(pickMovie(null)) },\r\n        setModal: () => { dispatch(setModal('')) }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapActionsToProps)(DeleteModalContent);","import React, { Component } from 'react'\r\nimport ReactModal from 'react-modal'\r\nimport { connect } from 'react-redux'\r\nimport { setModal } from '../../actions/generalActions';\r\nimport { pickMovie } from '../../actions/moviesActions'\r\nimport AddEditModalContent from '../general/AddEditeModalContent';\r\nimport DeleteModalContent from '../general/DeleteModalContent'\r\n\r\nReactModal.setAppElement('#root');\r\n\r\nclass Modal extends Component {\r\n    handleClose = () => {\r\n        this.props.pickMovie(null)\r\n        this.props.setModal('')\r\n    }\r\n    determineContent = () => {\r\n        let { modalContent } = this.props.general\r\n        switch (modalContent) {\r\n            case ('add'):\r\n                return <AddEditModalContent />\r\n            case ('edit'):\r\n                return <AddEditModalContent />\r\n            case ('delete'):\r\n                return <DeleteModalContent />\r\n            default:\r\n                return <h1>no content chosen</h1>\r\n        }\r\n    }\r\n    render() {\r\n        let content = this.determineContent();\r\n        const customStyles = {\r\n            content: {\r\n                top: '50%',\r\n                left: '50%',\r\n                right: 'auto',\r\n                bottom: 'auto',\r\n                marginRight: '-50%',\r\n                transform: 'translate(-50%, -50%)',\r\n                backgroundColor: '#f4f4f4'\r\n            }\r\n        }\r\n        return (\r\n            <ReactModal\r\n                isOpen={!!this.props.general.modalContent}\r\n                contentLabel=\"Example Modal\"\r\n                onRequestClose={this.handleClose}\r\n                shouldCloseOnOverlayClick={true}\r\n                shouldCloseOnEsc={true}\r\n                style={customStyles}\r\n            >\r\n                {content}\r\n            </ReactModal>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        general: state.general\r\n    }\r\n}\r\nconst mapActionsToProps = (dispatch) => {\r\n    return {\r\n        setModal: (modalContent) => { dispatch(setModal(modalContent)) },\r\n        pickMovie: (movie) => { dispatch(pickMovie(movie)) }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapActionsToProps)(Modal)","import React, { Component } from 'react';\r\nimport AddMovie from '../movies/AddMovie';\r\nimport MoviesList from '../movies/MoviesList';\r\nimport Modal from '../general/Modal';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Home extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <main className=\"home-container\">\r\n                <AddMovie />\r\n                <MoviesList />\r\n                <Modal />\r\n            </main>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        general: state.general\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Home)","import React from 'react'\r\n\r\nconst About = () => {\r\n    return (\r\n        <section className=\"about-section\">\r\n            <div className=\"about-container\">\r\n                <div className=\"about-content\">\r\n                    <h2 className=\"about-title\">About this page</h2>\r\n                    <div className=\"about-body\">\r\n                        <p className=\"about-p\">\r\n                            This page is using OMDb API, react, redux, redux-thunk, axios, validator, classnames and uuid.\r\n                        </p>\r\n\r\n                        <p className=\"about-p\">\r\n                            For the design I have decided not to use React-Bootstrap or React-Materialize in this project. The input validation form was made with validator and classnames. I have used flexbox, some CSS3 features such as clip-path.\r\n                        Icons made by <a href=\"https://www.flaticon.com/authors/smashicons\" title=\"Smashicons\" target=\"_blank\">Smashicons</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\" target=\"_blank\">www.flaticon.com</a> is licensed by <a href=\"http://creativecommons.org/licenses/by/3.0/\" title=\"Creative Commons BY 3.0\" target=\"_blank\">CC 3.0 BY</a> and transformed into favicon by <a href=\"https://www.favicon-generator.org/\" target=\"_blank\">favicon-generator.org</a>\r\n                        </p>\r\n                        <p className=\"about-p\">\r\n                            I hope you've enjoyd this page. You can watch some of my other projects on my <a href=\"https://yardenb.github.io/yarden-portfolio/\" target=\"_blank\">portfolio website</a> and I'm available for any question at <a href=\"mailto:yardenbesh@gmail.com\">yardenbesh@gmail.com</a>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\nexport default About","import React from 'react';\r\nconst Loading = () => {\r\n    return (\r\n        <div className=\"loading-container\">\r\n            <div className=\"loader\"></div>\r\n            <p className=\"loading__text\">Loading...</p>\r\n        </div>\r\n    )\r\n}\r\nexport default Loading;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport store from './store';\nimport Header from './cmps/layout/Header';\nimport Nav from './cmps/layout/Nav';\nimport Home from './cmps/pages/Home';\nimport About from './cmps/pages/About';\nimport Loading from './cmps/general/Loading';\nimport { getInitialDetails } from './actions/moviesActions';\nimport './App.css';\n\n\nclass App extends Component {\n  state = {\n    isLoading: false\n  }\n  componentDidMount = async () => {\n    this.setState({ isLoading: true })\n    await store.dispatch(getInitialDetails());\n    this.setState({ isLoading: false })\n  }\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <div className=\"App\">\n          <Header />\n          <Nav />\n          {this.state.isLoading ? <Loading /> : (\n            <React.Fragment>\n              <Route path='/' component={Home} exact />\n              <Route path='/about' component={About} />\n            </React.Fragment>\n          )}\n\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store';\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}